{"ast":null,"code":"import InputComp from '../components/InputComp.vue';\nimport ShowDatabaseModalComp from '@/components/modais/ShowDatabaseModalComp.vue';\nimport EditDatabaseModalComp from '@/components/modais/EditDatabaseModalComp.vue';\nimport DeleteDatabaseModalComp from '@/components/modais/DeleteDatabaseModalComp.vue';\nimport CreateDatabaseVue from '../components/modais/CreateDatabase.vue';\nexport default {\n  created() {\n    this.databases = this.databases.map(database => {\n      database.imageQuality = database.imageQuality.join(\", \");\n      database.imageCount = database.images.length;\n      return database;\n    });\n  },\n  data() {\n    return {\n      databases: [{\n        id: 1,\n        name: 'Banco 1',\n        images: [1, 2, 3, 4],\n        examType: 'Mamografia',\n        imageQuality: [8, 12, 16],\n        imageType: 'DICOM',\n        description: 'Banco de imagens médica',\n        sourceLink: 'Link de origem'\n      }, {\n        id: 2,\n        name: 'Banco 2',\n        images: [1, 2, 3, 4, 5, 6, 7, 8],\n        examType: 'Mamografia',\n        imageQuality: [16],\n        imageType: 'DICOM',\n        description: 'Banco de imagens médica',\n        sourceLink: 'Link de origem'\n      }, {\n        id: 3,\n        name: 'Banco 3',\n        images: [1, 2],\n        examType: 'Mamografia',\n        imageQuality: [8, 12],\n        imageType: 'DICOM',\n        description: 'Banco de imagens médica',\n        sourceLink: 'Link de origem'\n      }],\n      showViewModal: false,\n      showEditModal: false,\n      showDeleteModal: false,\n      selectedDatabase: null,\n      showModal: false /* Alterar o nome depois */\n    };\n  },\n\n  methods: {\n    addBank() {\n      /* const newBankId = this.databases.length + 1;\r\n      const newBank = { id: newBankId, name: `Banco ${newBankId}`, imageCount: 0, examType:'Mamografia' };\r\n      this.databases.push(newBank); */\n      this.showModal = true;\n    },\n    openViewModal(database) {\n      this.selectedDatabase = database;\n      this.showViewModal = true;\n    },\n    openEditModal(database) {\n      this.selectedDatabase = database;\n      this.showEditModal = true;\n    },\n    openDeleteModal(database) {\n      this.selectedDatabase = database;\n      this.showDeleteModal = true;\n    },\n    closeModal() {\n      this.selectedDatabase = null;\n      this.showViewModal = false;\n      this.showEditModal = false;\n      this.showDeleteModal = false;\n    },\n    deleteDatabase(database) {\n      // Lógica para excluir usuário\n      console.log('Excluir banco:', database);\n    },\n    saveChanges(newDatabase) {\n      this.databases = this.databases.map(database => {\n        if (database.id == newDatabase.id) return newDatabase;else return database;\n      });\n      this.databases = this.databases.map(database => {\n        if (typeof database.imageQuality == 'object') {\n          database.imageQuality = database.imageQuality.join(\", \");\n        }\n        database.imageCount = database.images.length;\n        return database;\n      });\n      this.closeModal();\n    }\n  },\n  components: {\n    InputComp,\n    ShowDatabaseModalComp,\n    EditDatabaseModalComp,\n    DeleteDatabaseModalComp,\n    CreateDatabaseVue\n  }\n};","map":{"version":3,"names":["InputComp","ShowDatabaseModalComp","EditDatabaseModalComp","DeleteDatabaseModalComp","CreateDatabaseVue","created","databases","map","database","imageQuality","join","imageCount","images","length","data","id","name","examType","imageType","description","sourceLink","showViewModal","showEditModal","showDeleteModal","selectedDatabase","showModal","methods","addBank","openViewModal","openEditModal","openDeleteModal","closeModal","deleteDatabase","console","log","saveChanges","newDatabase","components"],"sources":["C:\\Users\\aless\\Desktop\\Projeto web 2\\sistema_gestao_imagens_medicas\\Frontend\\src\\views\\DatabaseView.vue"],"sourcesContent":["<template>\r\n    <div class=\"container ms-3 me-3\">\r\n        <div class=\"sidebar\">\r\n            <div class=\"sidebar-header\">\r\n                <h2 class=\"sidebar-title\">Bancos\r\n                    <button class=\"add-button\" @click=\"addBank\">+ Novo</button>\r\n                </h2>\r\n                <div id=\"filter\">\r\n                    <div class=\"filter-item-container\">\r\n                        <i class=\"fa fa-search mt-2\" aria-hidden=\"true\"></i>\r\n                        <InputComp class=\"filter-item\" name=\"pesquisar\" type=\"pesquisar\" placeHolder=\"Pesquisar\"></InputComp>\r\n                    </div>\r\n                    <div class=\"filter-item-container\">\r\n                        <i class=\"fa fa-filter mt-2\" aria-hidden=\"true\"></i>\r\n                        <InputComp class=\"filter-item\" name=\"filtro\" type=\"filtro\" placeHolder=\"Filtro\" :function=\"changeValues\"></InputComp>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n            <table class=\"table table-hover mt-4\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">                \r\n                            <span class=\"table-header\">Nome do Banco</span>\r\n                        </th>\r\n                        <th scope=\"col\"> \r\n                            <span class=\"table-header\">Tipo de exame</span>\r\n                        </th>\r\n                        <th scope=\"col\"> \r\n                            <span class=\"table-header\">Quantidade de Imagens</span>\r\n                        </th>\r\n                        <th scope=\"col\">\r\n                            <span class=\"table-header\">Ações</span>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr v-for=\"database in databases\" :key=\"database.id\">\r\n                        <td scope=\"row\">\r\n                            <span class=\"table-item\">{{ database.name }}</span>\r\n                        </td>\r\n                        <td>\r\n                            <span class=\"table-item\">{{ database.examType }}</span>\r\n                        </td>\r\n                        <td>\r\n                            <span class=\"table-item\">{{ database.imageCount }} imagens</span>\r\n                        </td>\r\n                        <td>\r\n                            <button @click=\"openEditModal(database)\" class=\"btn\">\r\n                                <i class=\"fa fa-download table-item\"></i>\r\n                            </button>\r\n                            <button @click=\"openEditModal(database)\" class=\"btn\">\r\n                                <i class=\"fa fa-edit table-item\"></i>\r\n                            </button>\r\n                            <button @click=\"openViewModal(database)\" class=\"btn\">\r\n                                <i class=\"fa fa-eye table-item\"></i>\r\n                            </button>\r\n                            <button @click=\"openDeleteModal(database)\" class=\"btn\">\r\n                                <i class=\"fa fa-trash table-item\"></i>\r\n                            </button>\r\n                        </td>  \r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <CreateDatabaseVue v-if=\"showEditModal\" :database=\"this.selectedDatabase\" @close-modal=\"closeModal\" @save-changes=\"saveChanges\" />\r\n        <EditDatabaseModalComp v-if=\"showEditModal\" :database=\"this.selectedDatabase\" @close-modal=\"closeModal\" @save-changes=\"saveChanges\" />\r\n        <DeleteDatabaseModalComp v-if=\"showDeleteModal\" :database=\"this.selectedDatabase\" @close-modal=\"closeModal\" @delete-database=\"deleteDatabase\" />\r\n        <ShowDatabaseModalComp v-if=\"showViewModal\" :database=\"this.selectedDatabase\" @close-modal=\"closeModal\"/>\r\n    </div>\r\n</template>\r\n  \r\n<script>\r\nimport InputComp from '../components/InputComp.vue'\r\nimport ShowDatabaseModalComp from '@/components/modais/ShowDatabaseModalComp.vue';\r\nimport EditDatabaseModalComp from '@/components/modais/EditDatabaseModalComp.vue';\r\nimport DeleteDatabaseModalComp from '@/components/modais/DeleteDatabaseModalComp.vue';\r\nimport CreateDatabaseVue from '../components/modais/CreateDatabase.vue';\r\n\r\nexport default {\r\n    created() {\r\n        this.databases = this.databases.map((database) => {\r\n            database.imageQuality = database.imageQuality.join(\", \")\r\n            database.imageCount = database.images.length\r\n            return database\r\n        });\r\n    },\r\n    data() {\r\n        return {\r\n            databases: [\r\n                { id: 1,\r\n                    name: 'Banco 1',\r\n                    images: [1, 2, 3, 4], \r\n                    examType:'Mamografia',\r\n                    imageQuality: [8, 12, 16],\r\n                    imageType: 'DICOM',\r\n                    description: 'Banco de imagens médica',\r\n                    sourceLink: 'Link de origem'    \r\n                },\r\n                { id: 2,\r\n                    name: 'Banco 2',\r\n                    images: [1, 2, 3, 4, 5, 6, 7, 8], \r\n                    examType:'Mamografia',\r\n                    imageQuality: [16],\r\n                    imageType: 'DICOM',\r\n                    description: 'Banco de imagens médica',\r\n                    sourceLink: 'Link de origem'        \r\n                },\r\n                { id: 3,\r\n                    name: 'Banco 3',\r\n                    images: [1, 2], \r\n                    examType:'Mamografia',\r\n                    imageQuality: [8, 12],\r\n                    imageType: 'DICOM',\r\n                    description: 'Banco de imagens médica',\r\n                    sourceLink: 'Link de origem'        \r\n                }\r\n            ],\r\n            showViewModal: false,\r\n            showEditModal: false,\r\n            showDeleteModal: false,\r\n            selectedDatabase: null,\r\n            showModal: false /* Alterar o nome depois */\r\n        };\r\n    },\r\n    methods: {\r\n        addBank() {\r\n            /* const newBankId = this.databases.length + 1;\r\n            const newBank = { id: newBankId, name: `Banco ${newBankId}`, imageCount: 0, examType:'Mamografia' };\r\n            this.databases.push(newBank); */\r\n            this.showModal = true;\r\n        },\r\n        openViewModal(database) {\r\n            this.selectedDatabase = database;\r\n            this.showViewModal = true;\r\n        },\r\n        openEditModal(database) {\r\n            this.selectedDatabase = database;\r\n            this.showEditModal = true;\r\n        },\r\n        openDeleteModal(database) {\r\n            this.selectedDatabase = database;\r\n            this.showDeleteModal = true;\r\n        },\r\n        closeModal() {\r\n            this.selectedDatabase = null;\r\n            this.showViewModal = false;\r\n            this.showEditModal = false;\r\n            this.showDeleteModal = false;\r\n        },\r\n        deleteDatabase(database) {\r\n            // Lógica para excluir usuário\r\n            console.log('Excluir banco:', database);\r\n        },\r\n        saveChanges(newDatabase) {\r\n            this.databases = this.databases.map((database) => {\r\n                if (database.id == newDatabase.id)\r\n                    return newDatabase;\r\n                else\r\n                    return database\r\n            })\r\n\r\n            this.databases = this.databases.map((database) => {\r\n                if (typeof database.imageQuality == 'object') {\r\n                    database.imageQuality = database.imageQuality.join(\", \")\r\n                }\r\n\r\n                database.imageCount = database.images.length\r\n                return database\r\n            });\r\n\r\n            this.closeModal();\r\n        },\r\n\r\n    },\r\n    components: {\r\n        InputComp,\r\n        ShowDatabaseModalComp,\r\n        EditDatabaseModalComp,\r\n        DeleteDatabaseModalComp,\r\n        CreateDatabaseVue\r\n\r\n    }\r\n};\r\n</script>\r\n  \r\n<style scoped>\r\n\r\n* {\r\n    color: #73bf8e;\r\n    font-weight: 100;\r\n}\r\n.sidebar {\r\n    font-family: 'Montserrat', sans-serif;\r\n    background-color: #ffffff;\r\n    padding: 5%;\r\n    padding-top: 2.5%;\r\n    margin: 0 auto; /* Adicionado para centralizar horizontalmente */\r\n    height: 70vh;\r\n    width: 100%;\r\n    border-radius: 25px;\r\n    box-shadow: 0 4px 7px rgba(0, 0, 0, 0.613);\r\n}\r\n\r\n.sidebar-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n}\r\n\r\n.sidebar-title {\r\n    margin-top: 0;\r\n    margin-bottom: 3%;\r\n    font-size: 25px;\r\n    text-align: left;\r\n    font-weight: bold;\r\n    width: 70%;\r\n}\r\n\r\n.table-header{\r\n    font-weight: bold;\r\n    font-size: 18px;\r\n}\r\n\r\n.table-item {\r\n    color: #80BFAD;\r\n}\r\n\r\n.table-item:hover {\r\n    color: #459c63;\r\n}\r\n\r\n#filter {\r\n    width: 30%;\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n\r\n.filter-item {\r\n    width: 90%;\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.filter-item-container{\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-around;\r\n}\r\n\r\n.add-button {\r\n    background-color: #73bf8e;;\r\n    color: #ffffff;\r\n    border: none;\r\n    padding: 0.5% 1%;\r\n    border-radius: 10px;\r\n    font-size: 15px;\r\n    cursor: pointer;\r\n    font-weight: bold;\r\n}\r\n\r\n.add-button:hover {\r\n    background-color: #459c63;\r\n    border: none;\r\n} \r\n\r\ntbody td button {\r\n    padding: 0px;\r\n    margin-left: 10px;\r\n    border: none;\r\n}\r\n\r\ntbody td button:hover {\r\n    border: none;\r\n}\r\n  \r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}